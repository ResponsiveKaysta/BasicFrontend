import React, { FC } from "react";

const pictogramMap = {
  hamburger_menu: (size: number, className: string) => (
    <svg
      className={className}
      fill="inherit"
      viewBox="0 0 24 24"
      stroke="currentColor"
      width={size}
      height={size}
      name="hamburger_menu"
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        d="M4 6h16M4 12h16M4 18h16"
      />
    </svg>
  ),
  hamburger_menu_close: (size: number, className: string) => (
    <svg
      className={className}
      stroke="currentColor"
      fill="inherit"
      viewBox="0 0 24 24"
      width={size}
      height={size}
      name="hamburger_menu_close"
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        d="M6 18L18 6M6 6l12 12"
      />
    </svg>
  ),
  xing_logo: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 512 512"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="xing_logo"
    >
      <g>
        <g>
          <polygon points="496,0 376.384,0 198.688,311.264 313.184,512 432.8,512 318.304,311.264 		" />
        </g>
      </g>
      <g>
        <g>
          <polygon points="149.216,96 36.448,96 101.696,210.912 16,352 128.768,352 214.464,210.912 		" />
        </g>
      </g>
    </svg>
  ),
  xing_logo_box: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 581.4 581.4"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="xing_logo_box"
    >
      <g>
        <g>
          <path
            d="M581.4,0H0v581.4h581.4V0z M150.417,399.201H72.314c-4.578,0-7.956-1.848-10.135-5.562c-2.172-3.69-2.172-7.607,0-11.757
			l82.681-146.409c0.214,0,0.214-0.104,0-0.331l-52.613-91.175c-2.613-4.786-2.729-8.819-0.325-12.087
			c1.965-3.268,5.441-4.902,10.459-4.902h78.104c8.708,0,15.899,4.902,21.566,14.707l53.593,93.458
			c-2.179,3.929-30.178,53.605-83.985,149.028C165.779,394.195,158.698,399.201,150.417,399.201z M519.05,37.424L346.502,342.665
			v0.318l109.806,200.98c2.393,4.352,2.503,8.385,0.324,12.1c-2.179,3.268-5.667,4.902-10.459,4.902h-78.104
			c-9.149,0-16.341-4.902-21.567-14.707l-110.79-203.275c3.923-6.959,61.77-109.585,173.532-307.848
			c5.441-9.804,12.418-14.707,20.912-14.707h78.759c4.792,0,8.17,1.634,10.129,4.902C521.448,28.832,521.448,32.853,519.05,37.424z"
          />
        </g>
      </g>
    </svg>
  ),
  linkedin_logo: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="-21 -35 682.66669 682"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="linkedin_logo"
    >
      <path d="m77.613281-.667969c-46.929687 0-77.613281 30.816407-77.613281 71.320313 0 39.609375 29.769531 71.304687 75.8125 71.304687h.890625c47.847656 0 77.625-31.695312 77.625-71.304687-.894531-40.503906-29.777344-71.320313-76.714844-71.320313zm0 0" />
      <path d="m8.109375 198.3125h137.195313v412.757812h-137.195313zm0 0" />
      <path d="m482.054688 188.625c-74.011719 0-123.640626 69.546875-123.640626 69.546875v-59.859375h-137.199218v412.757812h137.191406v-230.5c0-12.339843.894531-24.660156 4.519531-33.484374 9.917969-24.640626 32.488281-50.167969 70.390625-50.167969 49.644532 0 69.5 37.851562 69.5 93.339843v220.8125h137.183594v-236.667968c0-126.78125-67.6875-185.777344-157.945312-185.777344zm0 0" />
    </svg>
  ),
  linkedin_logo_box: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 455 455"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="linkedin_logo_box"
    >
      <g>
        <path d="M246.4,204.35v-0.665c-0.136,0.223-0.324,0.446-0.442,0.665H246.4z" />
        <path
          d="M0,0v455h455V0H0z M141.522,378.002H74.016V174.906h67.506V378.002z
		 M107.769,147.186h-0.446C84.678,147.186,70,131.585,70,112.085c0-19.928,15.107-35.087,38.211-35.087
		c23.109,0,37.31,15.159,37.752,35.087C145.963,131.585,131.32,147.186,107.769,147.186z M385,378.002h-67.524V269.345
		c0-27.291-9.756-45.92-34.195-45.92c-18.664,0-29.755,12.543-34.641,24.693c-1.776,4.34-2.24,10.373-2.24,16.459v113.426h-67.537
		c0,0,0.905-184.043,0-203.096H246.4v28.779c8.973-13.807,24.986-33.547,60.856-33.547c44.437,0,77.744,29.02,77.744,91.398V378.002
		z"
        />
      </g>
    </svg>
  ),
  github_logo: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 24 24"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="github_logo"
    >
      <path
        d="m12 .5c-6.63 0-12 5.28-12 11.792 0 5.211 3.438 9.63 8.205 11.188.6.111.82-.254.82-.567 0-.28-.01-1.022-.015-2.005-3.338.711-4.042-1.582-4.042-1.582-.546-1.361-1.335-1.725-1.335-1.725-1.087-.731.084-.716.084-.716 1.205.082 1.838 1.215 1.838 1.215 1.07 1.803 2.809 1.282 3.495.981.108-.763.417-1.282.76-1.577-2.665-.295-5.466-1.309-5.466-5.827 0-1.287.465-2.339 1.235-3.164-.135-.298-.54-1.497.105-3.121 0 0 1.005-.316 3.3 1.209.96-.262 1.98-.392 3-.398 1.02.006 2.04.136 3 .398 2.28-1.525 3.285-1.209 3.285-1.209.645 1.624.24 2.823.12 3.121.765.825 1.23 1.877 1.23 3.164 0 4.53-2.805 5.527-5.475 5.817.42.354.81 1.077.81 2.182 0 1.578-.015 2.846-.015 3.229 0 .309.21.678.825.56 4.801-1.548 8.236-5.97 8.236-11.173 0-6.512-5.373-11.792-12-11.792z"
        fill="inherit"
      />
    </svg>
  ),
  github_logo_box: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 568.034 568.034"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="github_logo_box"
    >
      <g>
        <path
          d="M550.99,0H17.051C8.948,0,2.381,6.567,2.381,14.67v538.694c0,8.104,6.567,14.67,14.67,14.67h177.498v-0.129
			c8.011-0.092,14.149-4.577,14.431-12.166c0.728-19.725,0.214-39.492,0.214-58.562c-14.296,0.667-27.944,2.473-41.438,1.695
			c-29.762-1.714-52.632-14.413-64.493-43.556c-7.026-17.265-17.613-32.032-34.101-41.886c-3.079-1.842-5.771-4.554-8.127-7.308
			c-3.079-3.592-2.503-7.282,2.362-8.268c4.908-0.998,10.27-1.695,15.11-0.79c19.009,3.568,32.154,15.49,42.216,31.347
			c19.896,31.371,50.521,40.974,84.976,26.487c1.921-0.808,4.363-2.766,4.725-4.553c2.778-13.887,7.968-26.549,18.427-37.65
			c-11.628-2.154-22.399-3.739-32.962-6.188c-30.417-7.038-57.742-19.7-77.724-44.848c-16.303-20.514-23.758-44.528-27.185-70.086
			c-5.367-40.031-0.563-77.503,26.928-109.493c1.389-1.616,2.142-4.927,1.524-6.94c-6.885-22.497-5.833-44.805,0.991-67.051
			c3.581-11.683,4.578-12.265,16.5-10.637c0.729,0.098,1.438,0.281,2.161,0.404c23.898,3.954,44.468,15.526,64.731,27.95
			c2.724,1.671,6.873,2.711,9.866,1.983c48.397-11.744,96.702-11.695,145.093,0.043c2.809,0.679,6.561-0.288,9.247-1.695
			c11.016-5.759,21.561-12.454,32.718-17.914c12.98-6.346,26.652-11.12,41.371-10.857c2.576,0.049,6.561,2.509,7.423,4.786
			c8.856,23.464,10.723,47.375,3.666,71.794c-0.753,2.607,0.367,6.322,1.769,8.892c6.965,12.779,16.689,24.572,21.096,38.127
			c13.434,41.316,8.538,82.229-9.749,121.06c-16.757,35.594-47.834,53.63-84.621,62.933c-12.424,3.14-25.153,5.049-38.556,7.681
			c17.564,18.348,20.318,40.74,20.006,64.192c-0.324,24.192-0.238,48.391-0.251,72.589c-0.006,11.72,5.11,18.195,14.039,18.574
			c-0.006,0.037,188.723,0.037,188.723,0.037V14.67C565.653,6.567,559.087,0,550.99,0z"
        />
      </g>
    </svg>
  ),
  box: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 568.034 568.034"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="box"
    >
      <g>
        <path d="m446.822 213.631-190.827-63.256-190.827 63.256-65.158 103.498 59.984 19.884v110.007l196 64.97 196-64.97v-110.007l59.984-19.884zm-57.5 12.545-133.327 44.195-133.327-44.195 133.327-44.195zm-343.52 74.527 35.627-56.592 151.67 50.276-35.626 56.591zm44.193 46.255 120.345 39.892 30.655-48.693v137.256l-151-50.054zm181 128.454v-137.256l30.655 48.693 120.345-39.892v78.401zm43.522-124.433-35.626-56.591 151.67-50.276 35.627 56.592z" />
        <path d="m240.995 0h30v100.174h-30z" />
        <path
          d="m122.952 31.63h30v100.174h-30z"
          transform="matrix(.866 -.5 .5 .866 -22.376 79.924)"
        />
        <path
          d="m323.951 66.717h100.174v30h-100.174z"
          transform="matrix(.5 -.866 .866 .5 116.249 364.784)"
        />
      </g>
    </svg>
  ),
  cardboard_box: (size: number, className: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 512 512"
      fill="inherit"
      stroke="currentColor"
      className={className}
      name="cardboard_box"
    >
      <g>
        <path d="m497 60.25h-482c-8.284 0-15 6.716-15 15v90.375c0 8.284 6.716 15 15 15h15.125v256.125c0 8.284 6.716 15 15 15h421.75c8.284 0 15-6.716 15-15v-256.125h15.125c8.284 0 15-6.716 15-15v-90.375c0-8.284-6.716-15-15-15zm-45.125 361.5h-391.75v-241.125h391.75zm30.125-271.125h-452v-60.375h452z" />
        <path d="m225.875 301.125h60.25c24.882 0 45.125-20.243 45.125-45.125s-20.243-45.125-45.125-45.125h-60.25c-24.882 0-45.125 20.243-45.125 45.125s20.243 45.125 45.125 45.125zm0-60.25h60.25c8.34 0 15.125 6.785 15.125 15.125s-6.785 15.125-15.125 15.125h-60.25c-8.34 0-15.125-6.785-15.125-15.125s6.785-15.125 15.125-15.125z" />
      </g>
    </svg>
  ),
};

export const allPictogramNames = Object.keys(pictogramMap);

export enum PictogramSize {
  xs = 32,
  sm = 48,
  md = 64,
  lg = 72,
  xl = 96,
  xxl = 144,
  xxxl = 216,
  xxxxl = 324,
}

export type PictogramName = keyof typeof pictogramMap;

export type PictogramProps = {
  name: PictogramName;
  className?: string;
  size?: PictogramSize;
};

export const Pictogram: FC<PictogramProps> = ({
  name,
  className = "",
  size = PictogramSize.sm,
}) => {
  if (!pictogramMap[name]) {
    console.warn(`No Icon with name '${name}' found!`);
    return null;
  }

  return pictogramMap[name](size, `fill-current ${className}`);
};
