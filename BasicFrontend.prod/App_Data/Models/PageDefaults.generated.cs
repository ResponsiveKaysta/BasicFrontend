//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1073 with alias "pageDefaults"
	/// <summary>Page Defaults</summary>
	public partial interface IPageDefaults : IPublishedContent
	{
		/// <summary>Header Type</summary>
		string HeaderType { get; }

		/// <summary>Hide in Menu</summary>
		bool HideInMenu { get; }

		/// <summary>Introduction</summary>
		string Introduction { get; }

		/// <summary>Page Style</summary>
		string PageStyle { get; }

		/// <summary>Page Type</summary>
		string PageType { get; }

		/// <summary>Teaser Image</summary>
		IPublishedContent TeaserImage { get; }

		/// <summary>Title</summary>
		string Title { get; }
	}

	/// <summary>Page Defaults</summary>
	[PublishedContentModel("pageDefaults")]
	public partial class PageDefaults : PublishedContentModel, IPageDefaults
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageDefaults";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageDefaults(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageDefaults, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Header Type
		///</summary>
		[ImplementPropertyType("headerType")]
		public string HeaderType
		{
			get { return GetHeaderType(this); }
		}

		/// <summary>Static getter for Header Type</summary>
		public static string GetHeaderType(IPageDefaults that) { return that.GetPropertyValue<string>("headerType"); }

		///<summary>
		/// Hide in Menu
		///</summary>
		[ImplementPropertyType("hideInMenu")]
		public bool HideInMenu
		{
			get { return GetHideInMenu(this); }
		}

		/// <summary>Static getter for Hide in Menu</summary>
		public static bool GetHideInMenu(IPageDefaults that) { return that.GetPropertyValue<bool>("hideInMenu"); }

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("introduction")]
		public string Introduction
		{
			get { return GetIntroduction(this); }
		}

		/// <summary>Static getter for Introduction</summary>
		public static string GetIntroduction(IPageDefaults that) { return that.GetPropertyValue<string>("introduction"); }

		///<summary>
		/// Page Style
		///</summary>
		[ImplementPropertyType("pageStyle")]
		public string PageStyle
		{
			get { return GetPageStyle(this); }
		}

		/// <summary>Static getter for Page Style</summary>
		public static string GetPageStyle(IPageDefaults that) { return that.GetPropertyValue<string>("pageStyle"); }

		///<summary>
		/// Page Type
		///</summary>
		[ImplementPropertyType("pageType")]
		public string PageType
		{
			get { return GetPageType(this); }
		}

		/// <summary>Static getter for Page Type</summary>
		public static string GetPageType(IPageDefaults that) { return that.GetPropertyValue<string>("pageType"); }

		///<summary>
		/// Teaser Image
		///</summary>
		[ImplementPropertyType("teaserImage")]
		public IPublishedContent TeaserImage
		{
			get { return GetTeaserImage(this); }
		}

		/// <summary>Static getter for Teaser Image</summary>
		public static IPublishedContent GetTeaserImage(IPageDefaults that) { return that.GetPropertyValue<IPublishedContent>("teaserImage"); }

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return GetTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTitle(IPageDefaults that) { return that.GetPropertyValue<string>("title"); }
	}
}
